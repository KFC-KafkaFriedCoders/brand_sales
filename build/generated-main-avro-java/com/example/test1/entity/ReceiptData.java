/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.test1.entity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ReceiptData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9083278745570859959L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReceiptData\",\"namespace\":\"com.example.test1.entity\",\"fields\":[{\"name\":\"franchise_id\",\"type\":\"int\"},{\"name\":\"store_brand\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"store_id\",\"type\":\"int\"},{\"name\":\"store_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"region\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"store_address\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"menu_items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MenuItem\",\"fields\":[{\"name\":\"menu_id\",\"type\":\"int\"},{\"name\":\"menu_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"unit_price\",\"type\":\"int\"},{\"name\":\"quantity\",\"type\":\"int\"}]}}},{\"name\":\"total_price\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"user_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"user_gender\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"user_age\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ReceiptData> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ReceiptData> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ReceiptData> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ReceiptData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ReceiptData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ReceiptData to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ReceiptData from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ReceiptData instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ReceiptData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int franchise_id;
  private java.lang.String store_brand;
  private int store_id;
  private java.lang.String store_name;
  private java.lang.String region;
  private java.lang.String store_address;
  private java.util.List<com.example.test1.entity.MenuItem> menu_items;
  private int total_price;
  private int user_id;
  private java.lang.String time;
  private java.lang.String user_name;
  private java.lang.String user_gender;
  private int user_age;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ReceiptData() {}

  /**
   * All-args constructor.
   * @param franchise_id The new value for franchise_id
   * @param store_brand The new value for store_brand
   * @param store_id The new value for store_id
   * @param store_name The new value for store_name
   * @param region The new value for region
   * @param store_address The new value for store_address
   * @param menu_items The new value for menu_items
   * @param total_price The new value for total_price
   * @param user_id The new value for user_id
   * @param time The new value for time
   * @param user_name The new value for user_name
   * @param user_gender The new value for user_gender
   * @param user_age The new value for user_age
   */
  public ReceiptData(java.lang.Integer franchise_id, java.lang.String store_brand, java.lang.Integer store_id, java.lang.String store_name, java.lang.String region, java.lang.String store_address, java.util.List<com.example.test1.entity.MenuItem> menu_items, java.lang.Integer total_price, java.lang.Integer user_id, java.lang.String time, java.lang.String user_name, java.lang.String user_gender, java.lang.Integer user_age) {
    this.franchise_id = franchise_id;
    this.store_brand = store_brand;
    this.store_id = store_id;
    this.store_name = store_name;
    this.region = region;
    this.store_address = store_address;
    this.menu_items = menu_items;
    this.total_price = total_price;
    this.user_id = user_id;
    this.time = time;
    this.user_name = user_name;
    this.user_gender = user_gender;
    this.user_age = user_age;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return franchise_id;
    case 1: return store_brand;
    case 2: return store_id;
    case 3: return store_name;
    case 4: return region;
    case 5: return store_address;
    case 6: return menu_items;
    case 7: return total_price;
    case 8: return user_id;
    case 9: return time;
    case 10: return user_name;
    case 11: return user_gender;
    case 12: return user_age;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: franchise_id = (java.lang.Integer)value$; break;
    case 1: store_brand = value$ != null ? value$.toString() : null; break;
    case 2: store_id = (java.lang.Integer)value$; break;
    case 3: store_name = value$ != null ? value$.toString() : null; break;
    case 4: region = value$ != null ? value$.toString() : null; break;
    case 5: store_address = value$ != null ? value$.toString() : null; break;
    case 6: menu_items = (java.util.List<com.example.test1.entity.MenuItem>)value$; break;
    case 7: total_price = (java.lang.Integer)value$; break;
    case 8: user_id = (java.lang.Integer)value$; break;
    case 9: time = value$ != null ? value$.toString() : null; break;
    case 10: user_name = value$ != null ? value$.toString() : null; break;
    case 11: user_gender = value$ != null ? value$.toString() : null; break;
    case 12: user_age = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'franchise_id' field.
   * @return The value of the 'franchise_id' field.
   */
  public int getFranchiseId() {
    return franchise_id;
  }


  /**
   * Sets the value of the 'franchise_id' field.
   * @param value the value to set.
   */
  public void setFranchiseId(int value) {
    this.franchise_id = value;
  }

  /**
   * Gets the value of the 'store_brand' field.
   * @return The value of the 'store_brand' field.
   */
  public java.lang.String getStoreBrand() {
    return store_brand;
  }


  /**
   * Sets the value of the 'store_brand' field.
   * @param value the value to set.
   */
  public void setStoreBrand(java.lang.String value) {
    this.store_brand = value;
  }

  /**
   * Gets the value of the 'store_id' field.
   * @return The value of the 'store_id' field.
   */
  public int getStoreId() {
    return store_id;
  }


  /**
   * Sets the value of the 'store_id' field.
   * @param value the value to set.
   */
  public void setStoreId(int value) {
    this.store_id = value;
  }

  /**
   * Gets the value of the 'store_name' field.
   * @return The value of the 'store_name' field.
   */
  public java.lang.String getStoreName() {
    return store_name;
  }


  /**
   * Sets the value of the 'store_name' field.
   * @param value the value to set.
   */
  public void setStoreName(java.lang.String value) {
    this.store_name = value;
  }

  /**
   * Gets the value of the 'region' field.
   * @return The value of the 'region' field.
   */
  public java.lang.String getRegion() {
    return region;
  }


  /**
   * Sets the value of the 'region' field.
   * @param value the value to set.
   */
  public void setRegion(java.lang.String value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'store_address' field.
   * @return The value of the 'store_address' field.
   */
  public java.lang.String getStoreAddress() {
    return store_address;
  }


  /**
   * Sets the value of the 'store_address' field.
   * @param value the value to set.
   */
  public void setStoreAddress(java.lang.String value) {
    this.store_address = value;
  }

  /**
   * Gets the value of the 'menu_items' field.
   * @return The value of the 'menu_items' field.
   */
  public java.util.List<com.example.test1.entity.MenuItem> getMenuItems() {
    return menu_items;
  }


  /**
   * Sets the value of the 'menu_items' field.
   * @param value the value to set.
   */
  public void setMenuItems(java.util.List<com.example.test1.entity.MenuItem> value) {
    this.menu_items = value;
  }

  /**
   * Gets the value of the 'total_price' field.
   * @return The value of the 'total_price' field.
   */
  public int getTotalPrice() {
    return total_price;
  }


  /**
   * Sets the value of the 'total_price' field.
   * @param value the value to set.
   */
  public void setTotalPrice(int value) {
    this.total_price = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   * @return The value of the 'user_id' field.
   */
  public int getUserId() {
    return user_id;
  }


  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(int value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public java.lang.String getTime() {
    return time;
  }


  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.String value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'user_name' field.
   * @return The value of the 'user_name' field.
   */
  public java.lang.String getUserName() {
    return user_name;
  }


  /**
   * Sets the value of the 'user_name' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.String value) {
    this.user_name = value;
  }

  /**
   * Gets the value of the 'user_gender' field.
   * @return The value of the 'user_gender' field.
   */
  public java.lang.String getUserGender() {
    return user_gender;
  }


  /**
   * Sets the value of the 'user_gender' field.
   * @param value the value to set.
   */
  public void setUserGender(java.lang.String value) {
    this.user_gender = value;
  }

  /**
   * Gets the value of the 'user_age' field.
   * @return The value of the 'user_age' field.
   */
  public int getUserAge() {
    return user_age;
  }


  /**
   * Sets the value of the 'user_age' field.
   * @param value the value to set.
   */
  public void setUserAge(int value) {
    this.user_age = value;
  }

  /**
   * Creates a new ReceiptData RecordBuilder.
   * @return A new ReceiptData RecordBuilder
   */
  public static com.example.test1.entity.ReceiptData.Builder newBuilder() {
    return new com.example.test1.entity.ReceiptData.Builder();
  }

  /**
   * Creates a new ReceiptData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ReceiptData RecordBuilder
   */
  public static com.example.test1.entity.ReceiptData.Builder newBuilder(com.example.test1.entity.ReceiptData.Builder other) {
    if (other == null) {
      return new com.example.test1.entity.ReceiptData.Builder();
    } else {
      return new com.example.test1.entity.ReceiptData.Builder(other);
    }
  }

  /**
   * Creates a new ReceiptData RecordBuilder by copying an existing ReceiptData instance.
   * @param other The existing instance to copy.
   * @return A new ReceiptData RecordBuilder
   */
  public static com.example.test1.entity.ReceiptData.Builder newBuilder(com.example.test1.entity.ReceiptData other) {
    if (other == null) {
      return new com.example.test1.entity.ReceiptData.Builder();
    } else {
      return new com.example.test1.entity.ReceiptData.Builder(other);
    }
  }

  /**
   * RecordBuilder for ReceiptData instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReceiptData>
    implements org.apache.avro.data.RecordBuilder<ReceiptData> {

    private int franchise_id;
    private java.lang.String store_brand;
    private int store_id;
    private java.lang.String store_name;
    private java.lang.String region;
    private java.lang.String store_address;
    private java.util.List<com.example.test1.entity.MenuItem> menu_items;
    private int total_price;
    private int user_id;
    private java.lang.String time;
    private java.lang.String user_name;
    private java.lang.String user_gender;
    private int user_age;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.test1.entity.ReceiptData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.franchise_id)) {
        this.franchise_id = data().deepCopy(fields()[0].schema(), other.franchise_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.store_brand)) {
        this.store_brand = data().deepCopy(fields()[1].schema(), other.store_brand);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.store_id)) {
        this.store_id = data().deepCopy(fields()[2].schema(), other.store_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.store_name)) {
        this.store_name = data().deepCopy(fields()[3].schema(), other.store_name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.region)) {
        this.region = data().deepCopy(fields()[4].schema(), other.region);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.store_address)) {
        this.store_address = data().deepCopy(fields()[5].schema(), other.store_address);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.menu_items)) {
        this.menu_items = data().deepCopy(fields()[6].schema(), other.menu_items);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.total_price)) {
        this.total_price = data().deepCopy(fields()[7].schema(), other.total_price);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.user_id)) {
        this.user_id = data().deepCopy(fields()[8].schema(), other.user_id);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.time)) {
        this.time = data().deepCopy(fields()[9].schema(), other.time);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.user_name)) {
        this.user_name = data().deepCopy(fields()[10].schema(), other.user_name);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.user_gender)) {
        this.user_gender = data().deepCopy(fields()[11].schema(), other.user_gender);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.user_age)) {
        this.user_age = data().deepCopy(fields()[12].schema(), other.user_age);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing ReceiptData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.test1.entity.ReceiptData other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.franchise_id)) {
        this.franchise_id = data().deepCopy(fields()[0].schema(), other.franchise_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.store_brand)) {
        this.store_brand = data().deepCopy(fields()[1].schema(), other.store_brand);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.store_id)) {
        this.store_id = data().deepCopy(fields()[2].schema(), other.store_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.store_name)) {
        this.store_name = data().deepCopy(fields()[3].schema(), other.store_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.region)) {
        this.region = data().deepCopy(fields()[4].schema(), other.region);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.store_address)) {
        this.store_address = data().deepCopy(fields()[5].schema(), other.store_address);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.menu_items)) {
        this.menu_items = data().deepCopy(fields()[6].schema(), other.menu_items);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.total_price)) {
        this.total_price = data().deepCopy(fields()[7].schema(), other.total_price);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_id)) {
        this.user_id = data().deepCopy(fields()[8].schema(), other.user_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.time)) {
        this.time = data().deepCopy(fields()[9].schema(), other.time);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user_name)) {
        this.user_name = data().deepCopy(fields()[10].schema(), other.user_name);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.user_gender)) {
        this.user_gender = data().deepCopy(fields()[11].schema(), other.user_gender);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.user_age)) {
        this.user_age = data().deepCopy(fields()[12].schema(), other.user_age);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'franchise_id' field.
      * @return The value.
      */
    public int getFranchiseId() {
      return franchise_id;
    }


    /**
      * Sets the value of the 'franchise_id' field.
      * @param value The value of 'franchise_id'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setFranchiseId(int value) {
      validate(fields()[0], value);
      this.franchise_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'franchise_id' field has been set.
      * @return True if the 'franchise_id' field has been set, false otherwise.
      */
    public boolean hasFranchiseId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'franchise_id' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearFranchiseId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_brand' field.
      * @return The value.
      */
    public java.lang.String getStoreBrand() {
      return store_brand;
    }


    /**
      * Sets the value of the 'store_brand' field.
      * @param value The value of 'store_brand'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setStoreBrand(java.lang.String value) {
      validate(fields()[1], value);
      this.store_brand = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'store_brand' field has been set.
      * @return True if the 'store_brand' field has been set, false otherwise.
      */
    public boolean hasStoreBrand() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'store_brand' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearStoreBrand() {
      store_brand = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_id' field.
      * @return The value.
      */
    public int getStoreId() {
      return store_id;
    }


    /**
      * Sets the value of the 'store_id' field.
      * @param value The value of 'store_id'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setStoreId(int value) {
      validate(fields()[2], value);
      this.store_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'store_id' field has been set.
      * @return True if the 'store_id' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'store_id' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearStoreId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_name' field.
      * @return The value.
      */
    public java.lang.String getStoreName() {
      return store_name;
    }


    /**
      * Sets the value of the 'store_name' field.
      * @param value The value of 'store_name'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setStoreName(java.lang.String value) {
      validate(fields()[3], value);
      this.store_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'store_name' field has been set.
      * @return True if the 'store_name' field has been set, false otherwise.
      */
    public boolean hasStoreName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'store_name' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearStoreName() {
      store_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'region' field.
      * @return The value.
      */
    public java.lang.String getRegion() {
      return region;
    }


    /**
      * Sets the value of the 'region' field.
      * @param value The value of 'region'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setRegion(java.lang.String value) {
      validate(fields()[4], value);
      this.region = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'region' field has been set.
      * @return True if the 'region' field has been set, false otherwise.
      */
    public boolean hasRegion() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'region' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearRegion() {
      region = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'store_address' field.
      * @return The value.
      */
    public java.lang.String getStoreAddress() {
      return store_address;
    }


    /**
      * Sets the value of the 'store_address' field.
      * @param value The value of 'store_address'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setStoreAddress(java.lang.String value) {
      validate(fields()[5], value);
      this.store_address = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'store_address' field has been set.
      * @return True if the 'store_address' field has been set, false otherwise.
      */
    public boolean hasStoreAddress() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'store_address' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearStoreAddress() {
      store_address = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'menu_items' field.
      * @return The value.
      */
    public java.util.List<com.example.test1.entity.MenuItem> getMenuItems() {
      return menu_items;
    }


    /**
      * Sets the value of the 'menu_items' field.
      * @param value The value of 'menu_items'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setMenuItems(java.util.List<com.example.test1.entity.MenuItem> value) {
      validate(fields()[6], value);
      this.menu_items = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'menu_items' field has been set.
      * @return True if the 'menu_items' field has been set, false otherwise.
      */
    public boolean hasMenuItems() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'menu_items' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearMenuItems() {
      menu_items = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_price' field.
      * @return The value.
      */
    public int getTotalPrice() {
      return total_price;
    }


    /**
      * Sets the value of the 'total_price' field.
      * @param value The value of 'total_price'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setTotalPrice(int value) {
      validate(fields()[7], value);
      this.total_price = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'total_price' field has been set.
      * @return True if the 'total_price' field has been set, false otherwise.
      */
    public boolean hasTotalPrice() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'total_price' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearTotalPrice() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_id' field.
      * @return The value.
      */
    public int getUserId() {
      return user_id;
    }


    /**
      * Sets the value of the 'user_id' field.
      * @param value The value of 'user_id'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setUserId(int value) {
      validate(fields()[8], value);
      this.user_id = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'user_id' field has been set.
      * @return True if the 'user_id' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'user_id' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearUserId() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public java.lang.String getTime() {
      return time;
    }


    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setTime(java.lang.String value) {
      validate(fields()[9], value);
      this.time = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearTime() {
      time = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_name' field.
      * @return The value.
      */
    public java.lang.String getUserName() {
      return user_name;
    }


    /**
      * Sets the value of the 'user_name' field.
      * @param value The value of 'user_name'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setUserName(java.lang.String value) {
      validate(fields()[10], value);
      this.user_name = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'user_name' field has been set.
      * @return True if the 'user_name' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'user_name' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearUserName() {
      user_name = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_gender' field.
      * @return The value.
      */
    public java.lang.String getUserGender() {
      return user_gender;
    }


    /**
      * Sets the value of the 'user_gender' field.
      * @param value The value of 'user_gender'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setUserGender(java.lang.String value) {
      validate(fields()[11], value);
      this.user_gender = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'user_gender' field has been set.
      * @return True if the 'user_gender' field has been set, false otherwise.
      */
    public boolean hasUserGender() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'user_gender' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearUserGender() {
      user_gender = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_age' field.
      * @return The value.
      */
    public int getUserAge() {
      return user_age;
    }


    /**
      * Sets the value of the 'user_age' field.
      * @param value The value of 'user_age'.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder setUserAge(int value) {
      validate(fields()[12], value);
      this.user_age = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'user_age' field has been set.
      * @return True if the 'user_age' field has been set, false otherwise.
      */
    public boolean hasUserAge() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'user_age' field.
      * @return This builder.
      */
    public com.example.test1.entity.ReceiptData.Builder clearUserAge() {
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ReceiptData build() {
      try {
        ReceiptData record = new ReceiptData();
        record.franchise_id = fieldSetFlags()[0] ? this.franchise_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.store_brand = fieldSetFlags()[1] ? this.store_brand : (java.lang.String) defaultValue(fields()[1]);
        record.store_id = fieldSetFlags()[2] ? this.store_id : (java.lang.Integer) defaultValue(fields()[2]);
        record.store_name = fieldSetFlags()[3] ? this.store_name : (java.lang.String) defaultValue(fields()[3]);
        record.region = fieldSetFlags()[4] ? this.region : (java.lang.String) defaultValue(fields()[4]);
        record.store_address = fieldSetFlags()[5] ? this.store_address : (java.lang.String) defaultValue(fields()[5]);
        record.menu_items = fieldSetFlags()[6] ? this.menu_items : (java.util.List<com.example.test1.entity.MenuItem>) defaultValue(fields()[6]);
        record.total_price = fieldSetFlags()[7] ? this.total_price : (java.lang.Integer) defaultValue(fields()[7]);
        record.user_id = fieldSetFlags()[8] ? this.user_id : (java.lang.Integer) defaultValue(fields()[8]);
        record.time = fieldSetFlags()[9] ? this.time : (java.lang.String) defaultValue(fields()[9]);
        record.user_name = fieldSetFlags()[10] ? this.user_name : (java.lang.String) defaultValue(fields()[10]);
        record.user_gender = fieldSetFlags()[11] ? this.user_gender : (java.lang.String) defaultValue(fields()[11]);
        record.user_age = fieldSetFlags()[12] ? this.user_age : (java.lang.Integer) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ReceiptData>
    WRITER$ = (org.apache.avro.io.DatumWriter<ReceiptData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ReceiptData>
    READER$ = (org.apache.avro.io.DatumReader<ReceiptData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.franchise_id);

    out.writeString(this.store_brand);

    out.writeInt(this.store_id);

    out.writeString(this.store_name);

    out.writeString(this.region);

    out.writeString(this.store_address);

    long size0 = this.menu_items.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.example.test1.entity.MenuItem e0: this.menu_items) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeInt(this.total_price);

    out.writeInt(this.user_id);

    out.writeString(this.time);

    out.writeString(this.user_name);

    out.writeString(this.user_gender);

    out.writeInt(this.user_age);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.franchise_id = in.readInt();

      this.store_brand = in.readString();

      this.store_id = in.readInt();

      this.store_name = in.readString();

      this.region = in.readString();

      this.store_address = in.readString();

      long size0 = in.readArrayStart();
      java.util.List<com.example.test1.entity.MenuItem> a0 = this.menu_items;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.example.test1.entity.MenuItem>((int)size0, SCHEMA$.getField("menu_items").schema());
        this.menu_items = a0;
      } else a0.clear();
      SpecificData.Array<com.example.test1.entity.MenuItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.example.test1.entity.MenuItem>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.example.test1.entity.MenuItem e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.example.test1.entity.MenuItem();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      this.total_price = in.readInt();

      this.user_id = in.readInt();

      this.time = in.readString();

      this.user_name = in.readString();

      this.user_gender = in.readString();

      this.user_age = in.readInt();

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.franchise_id = in.readInt();
          break;

        case 1:
          this.store_brand = in.readString();
          break;

        case 2:
          this.store_id = in.readInt();
          break;

        case 3:
          this.store_name = in.readString();
          break;

        case 4:
          this.region = in.readString();
          break;

        case 5:
          this.store_address = in.readString();
          break;

        case 6:
          long size0 = in.readArrayStart();
          java.util.List<com.example.test1.entity.MenuItem> a0 = this.menu_items;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.example.test1.entity.MenuItem>((int)size0, SCHEMA$.getField("menu_items").schema());
            this.menu_items = a0;
          } else a0.clear();
          SpecificData.Array<com.example.test1.entity.MenuItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.example.test1.entity.MenuItem>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.example.test1.entity.MenuItem e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.example.test1.entity.MenuItem();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 7:
          this.total_price = in.readInt();
          break;

        case 8:
          this.user_id = in.readInt();
          break;

        case 9:
          this.time = in.readString();
          break;

        case 10:
          this.user_name = in.readString();
          break;

        case 11:
          this.user_gender = in.readString();
          break;

        case 12:
          this.user_age = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










